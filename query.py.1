from franz.openrdf.sail.allegrographserver import AllegroGraphServer
from franz.openrdf.repository.repository import Repository
from franz.openrdf.query.query import QueryLanguage
import os

CURRENT_DIRECTORY = os.getcwd() 

AG_HOST = os.environ.get('AGRAPH_HOST', 'www.agentidea.com')
AG_PORT = int(os.environ.get('AGRAPH_PORT', '10035'))
AG_CATALOG = ''
AG_REPOSITORY = 'baroness'
AG_USER = 'test'
AG_PASSWORD = 'xyzzy'
AG_USER = 'allegroadmin'
AG_PASSWORD = 'kingfisher'

#RAISE_EXCEPTION_ON_VERIFY_FAILURE = False

def getConn(accessMode=Repository.OPEN):

    server = AllegroGraphServer(AG_HOST, AG_PORT, AG_USER, AG_PASSWORD)
    catalog = server.openCatalog()
    myRepository = catalog.getRepository(AG_REPOSITORY, accessMode)
    myRepository.initialize()
    conn = myRepository.getConnection()
    return conn

    
def getAttribute(predicateSuffix='EyeColor'):
    conn = getConn()
    queryString = """
    SELECT ?anonKey ?obect
    WHERE {?anonKey <http://rdf.agentidea.com/personals/%s> ?object}
    """ % predicateSuffix 

    tupleQuery = conn.prepareTupleQuery(QueryLanguage.SPARQL, queryString)
    result = tupleQuery.evaluate()

    rez = []
    counter = 0
    for bindingSet in result:
       rez.append({'seq': counter,
                   'id': bindingSet.getValue('anonKey').strip()
                  })   
       counter = counter + 1

    return rez


def getAttributes():
    conn = getConn()
    queryString= """
    select ?anonKey ?eyeColor ?hairColor ?cup ?bust ?build ?age
{
  ?anonKey <http://rdf.agentidea.com/personals/EyeColor> ?eyeColor.
  ?anonKey <http://rdf.agentidea.com/personals/HairColor> ?hairColor.
  ?anonKey  <http://rdf.agentidea.com/personals/Bust> ?bust.
  ?anonKey <http://rdf.agentidea.com/personals/Cup> ?cup.
  ?anonKey <http://rdf.agentidea.com/personals/Build> ?build.
  ?anonKey <http://rdf.agentidea.com/personals/Age> ?age.
}
"""
    tupleQuery = conn.prepareTupleQuery(QueryLanguage.SPARQL, queryString)
    result = tupleQuery.evaluate()
    rez = []
    for bindingSet in result:
        #print bindingSet
        rez.append({'cup':bindingSet.getValue('cup').getValue().strip(),
                    'eyeColor':bindingSet.getValue('eyeColor').getValue().strip(),
                    'hairColor':bindingSet.getValue('hairColor').getValue().strip(),
                    'bust':bindingSet.getValue('bust').getValue().strip(),
                    'cup':bindingSet.getValue('cup').getValue().strip(),
                    'build':bindingSet.getValue('build').getValue().strip(),
                    'age':bindingSet.getValue('age').getValue().strip(),
                    'id':bindingSet.getValue('anonKey').getValue().strip()


                    })
    return rez


if __name__ == '__main__':

    #print getAttribute()
    #print getAttribute('HairColor')
    print getAttributes()
